parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"QCba":[function(require,module,exports) {
"use strict";var e=this&&this.__awaiter||function(e,t,i,o){return new(i||(i=Promise))(function(n,s){function r(e){try{c(o.next(e))}catch(t){s(t)}}function a(e){try{c(o.throw(e))}catch(t){s(t)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i(function(e){e(t)})).then(r,a)}c((o=o.apply(e,t||[])).next())})},t=this&&this.__rest||function(e,t){var i={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(i[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(o=Object.getOwnPropertySymbols(e);n<o.length;n++)t.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(e,o[n])&&(i[o[n]]=e[o[n]])}return i},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const o=i(require("sharp")),n=require("fs"),s=require("path"),r=require("events"),a=require("crypto"),c=e=>({filename:Promise.resolve(void 0),content:Promise.resolve(e)}),h=e=>{try{return new URL(e),!0}catch(t){return!1}};exports.htmlInsertToString=(e=>{let t="<"+e[0];for(const i in e[1])t+=" "+i+'="'+e[1][i]+'"';return t+">"});class p extends r.EventEmitter{constructor(e,{baseURL:i="/",resolveDir:r="."}={},c={}){super(),this.intHashFunction=(e=>a.createHash("md5").update(e).digest("hex")),this.defaultHashMethod="name",this.icons=[],this.generatedFiles={},this.manifest={},this.html=[],i.endsWith("/")||(i+="/"),this.meta={baseURL:i,resolveDir:r};const p=(e,t)=>{for(const i of t){const t=e[i];if(void 0!==t)return t}return c[t[0]]};if("object"!=typeof e){if(void 0===e)throw"No PWA Manifest options found.";throw"The PWA Manifest options must be an object containing the desired parameters."}const l=process.env.NODE_ENV;if(l&&e[l.toLowerCase()]){const i=l.toLowerCase(),o=e[i],n=t(e,["symbol"==typeof i?i:i+""]);if("object"!=typeof o)throw`The specific options for environment "${l}" must be an object containing the desired parameters.`;e=Object.assign(Object.assign({},n),o)}const f=p(e,["disable","disabled"])||!1;if("boolean"!=typeof f)throw"The disable option in the PWA manifest options must be a boolean.";this.disabled=f;const d=p(e,["name","appName","app-name"]);if("string"!=typeof d){if(void 0===d)throw"No name was found in the options.";throw"The name provided in the options must be a string."}this.name=d;const u=p(e,["shortName","short-name","short_name","appShortName","app-short-name"])||d;if("string"!=typeof u)throw"The short name provided in the options must be a string.";this.shortName=u;const m=p(e,["desc","description"])||"";if("string"!=typeof m)throw"The description provided in the options must be a string.";this.desc=m;const g=p(e,["startURL","startUrl","start-url","start_url"])||i;if("string"!=typeof g)throw"The start URL provided in the options must be a string.";this.startURL=g;const b=p(e,["scope"])||i;if("string"!=typeof b)throw"The scope provided in the options must be a string.";this.scope=b;const y=p(e,["themeColor","theme-color","theme_color","theme"])||"white";if("string"!=typeof y)throw"The theme color provided in the options must be a string representing a valid CSS color.";this.theme=y;const v={},w=p(e,["screenshots","screenShots","screen-shots"]);if(w instanceof Array&&w.every(e=>"string"==typeof e)){const e=[];for(let t of w){let o=t.slice(t.lastIndexOf(".")+1);if("jpg"===o)o="jpeg";else if(!["png","jpeg","webp"].includes(o))throw"Each screenshot in the screenshots must be of type PNG, WebP, or JPEG. Ensure that the filenames have the correct extensions.";if(h(t))e.push({src:t,type:"image/"+o});else{if(!n.existsSync(t=s.resolve(r,t)))throw"Every screenshot in the screenshots array must be a valid filepath or absolute URL to a screenshot image.";{const r=n.readFileSync(t),a=this.fingerprint(s.basename(t),r);this.generatedFiles[a]=r,e.push({src:i+a,type:"image/"+o})}}}v.screenshots=e}else if(void 0!==w)throw"The screenshots provided in the options must be an array of screenshot filepaths or absolute URLs.";const T=p(e,["genIcon","gen-icon","iconGen","icon-gen","genIconOpts","gen-icon-opts","iconGenOpts","icon-gen-opts","generateIconOptions","generate-icon-options","iconGenerationOptions","icon-generation-options","icons"]);if("object"!=typeof T){if(void 0===T)throw"No icon generation options found in the PWA manifest options.";throw"The icon generation options in the PWA manifest options must be an object containing the desired parameters."}const I=p(T,["msTileColor","ms-tile-color","microsoftTileColor","microsoft-tile-color"])||y;if("string"!=typeof I)throw"The Microsoft tile color provided in the options must be a string representing the theme color for the application.";this.intBrowserConfig=`<TileColor>${I}</TileColor>`;const O=p(T,["baseIcon","base-icon","fromIcon","from-icon"]);if("string"!=typeof O){if(void 0===O)throw"No base icon was found in the icon generation options.";throw"The base icon parameter in the icon generation options must be a string that contains the path to the icon."}const x=s.basename(O,O.slice(O.lastIndexOf("."))),j=s.resolve(r,O);if(!n.existsSync(j))throw"No icon was found at the base icon path "+O+".";this.intBaseIconName=x;let P=[96,152,192,384,512];const A=p(T,["sizes","sizeList","size-list"]);if(A instanceof Array&&A.every(e=>"number"==typeof e))P=[...new Set(A.concat(192,512))];else if(void 0!==A)throw"The sizes parameter in the icon generation options must be an array of numeric pixel values for sizes of the images.";this.sizes=P;const z={compressionLevel:9};let k={webp:{quality:85,reductionEffort:6},png:z};const _=p(T,["formats","formatList","format-list"]);if(_ instanceof Object&&Object.keys(_).every(e=>["png","jpeg","webp","tiff"].includes(e)))k=Object.assign({},_),_.png||(k.png=z);else if(void 0!==_)throw"The formats parameter in the icon generation options must be an object with each key being a supported file type (png, webp, jpeg, or tiff) for the output images, and each value being the options to pass to sharp.";this.formats=k;const F=p(T,["resizeMethod","resize-method","resize"])||"cover";if(!["cover","contain","fill"].includes(F))throw"The resize method parameter in the icon generation options must be one of 'cover', 'contain', or 'fill'.";this.resizeOptions={fit:F,background:"rgba(0, 0, 0, 0)"},this.baseIcon=o.default(j).ensureAlpha();const L=p(T,["purpose","purposes"]);if(void 0!==L&&!(L instanceof Array&&L.every(e=>["badge","maskable","any"].includes(e))))throw"The purposes parameter in the icon generation options must be an array for which each element is one of 'badge', 'maskable', or 'any'.";this.purposes=L,this.html.push(["meta",{name:"msapplication-config",content:i+"browserconfig.xml"}]),this.html.push(["meta",{name:"theme-color",content:y}]);const M=p(T,["appleTouchIconBG","appleTouchIconBg","apple-touch-icon-bg","appleTouchIconBackground","apple-touch-icon-background","atib"])||y;if("string"!=typeof M)throw"The Apple Touch Icon background color parameter must be a string representing a valid CSS color.";this.appleTouchIconBG=M;const R=p(T,["appleTouchIconPadding","apple-touch-icon-padding","atip"])||12;if("number"!=typeof R)throw"The Apple Touch Icon padding parameter must be a number of pixels to pad the image with on each side.";this.appleTouchIconPadding=R;const C=p(T,["genFavicons","gen-favicons","generateFavicons","generate-favicons"]);if(!["boolean","undefined"].includes(typeof C))throw"The favicon generation option in the icon generation options must be a boolean.";this.doGenFavicons=C;const G=[[["background_color","backgroundColor","background-color","bgColor","bg-color","bg"],"string",y],[["categories","ctgs"],e=>e instanceof Array&&e.every(e=>"string"==typeof e)],[["dir","direction","textDirection","text-direction"],e=>["rtl","ltr","auto"].includes(e)],[["display","displayMode","display-mode"],e=>["standalone","minimal-ui","fullscreen","browser"].includes(e),"standalone"],[["iarc_rating_id","iarc","iarcId","iarcID","iarc-id","iarcRatingId","iarcRatingID","iarc-rating-id","iarcRating","iarc-rating"],"string"],[["lang","language"],"string"],[["orientation","rotated","screenOrientation","screen-orientation"],e=>["any","natural","landscape","landscape-primary","landscape-secondary","portrait","portrait-primary","portrait-secondary"].includes(e)],[["prefer_related_applications","preferRelated","prefer-related","preferRelatedApplications","prefer-related-applications"],"boolean"],[["related_applications","related","relatedApplications","related-applications"],e=>e instanceof Array&&e.every(e=>"object"==typeof e&&"string"==typeof e.platform&&("string"==typeof e.id?void 0===e.url||h(e.url):!!h(e.url)&&void 0===e.id))]];for(const t of G){let i,o;for(const n of t[0])if(void 0!==(i=e[n]))break;if(void 0!==i){if(!(o="string"==typeof t[1]?e=>typeof e===t[1]:t[1])(i))throw'Parameter "'+t[0][0]+'" provided in the options is invalid. Please check the official MDN documentation on the Web App Manifest.';v[t[0][0]]=i}else t[2]&&(v[t[0][0]]=t[2])}const N=p(e,["include","includeParams","include-params"]);if(N instanceof Array&&N.every(e=>"string"==typeof e))for(const t of N)v[t]=e[t];else if(void 0!==N)throw"The include parameter in the options must be an array of extra parameter names to include in the final manifest.";this.extraParams=v}set hashFunction(e){this.intHashFunction=e}get baseIconName(){return this.intBaseIconName}set hashMethod(e){this.defaultHashMethod=e}get browserConfig(){return`<?xml version="1.0" encoding="utf-8"?><browserconfig><msapplication><tile>${this.intBrowserConfig}</tile></msapplication></browserconfig>`}emit(e,...t){return"*"!==e&&super.emit("*",e,...t),super.emit(e,...t)}on(e,t){return super.on(e,t)}fingerprint(e,t,i=this.defaultHashMethod){const o=e.lastIndexOf("."),n=e.slice(0,o),s=e.slice(o+1);return n+"."+("name"===i?this.intHashFunction("_parcel-plugin-pwa-manifest-"+e).slice(-8)+".":"content"===i?this.intHashFunction(t.toString()).slice(-8)+".":"")+s}generate(){return e(this,void 0,void 0,function*(){return this.disabled?{browserConfig:"",generatedFiles:{},html:[],manifest:{}}:(this.emit("start"),yield this.genDefaultIcons(),this.doGenFavicons&&(yield this.genFavicons()),yield this.genAppleTouchIcon(),yield this.genMsTileIcons(),yield this.genManifest(),this.emit("end"),{browserConfig:this.browserConfig,generatedFiles:this.generatedFiles,html:this.html,manifest:this.manifest})})}genDefaultIcons(){return e(this,void 0,void 0,function*(){let e;this.emit("defaultIconsStart",`Generating icons for ${this.name}...`),this.purposes&&(e=this.purposes.join(" "));for(const i of this.sizes){const o=this.baseIcon.clone().resize(i,i,this.resizeOptions),n=i+"x"+i;for(const i of Object.keys(this.formats)){let s;try{s=o.clone()[i](this.formats[i]).toBuffer()}catch(t){throw"An unknown error ocurred during the icon creation process: "+t}const r=c(s);this.emit("defaultIconsGen",r),s=yield r.content;const a=(yield r.filename)||this.fingerprint(this.baseIconName+"-"+n+"."+i,s);this.generatedFiles[a]=s;const h={src:this.meta.baseURL+a,sizes:n,type:"image/"+i};e&&(h.purpose=e),this.icons.push(h)}}this.emit("defaultIconsEnd")})}genAppleTouchIcon(){return e(this,void 0,void 0,function*(){let e;this.emit("appleTouchIconStart","Generating Apple Touch Icon...");const t=180-2*this.appleTouchIconPadding;try{const i=yield this.baseIcon.clone().resize(t,t,this.resizeOptions).extend({top:this.appleTouchIconPadding,bottom:this.appleTouchIconPadding,left:this.appleTouchIconPadding,right:this.appleTouchIconPadding,background:"rgba(0, 0, 0, 0)"}).toBuffer();e=o.default(i).flatten({background:this.appleTouchIconBG}).png(this.formats.png).toBuffer()}catch(s){throw"An unknown error ocurred during the Apple Touch Icon creation process: "+s}const i=c(e);this.emit("appleTouchIconGen",i),e=yield i.content;const n=(yield i.filename)||this.fingerprint("apple-touch-icon.png",e);return this.generatedFiles[n]=e,this.html.push(["link",{rel:"apple-touch-icon",sizes:"180x180",href:this.meta.baseURL+n}]),this.emit("appleTouchIconEnd"),e})}genFavicons(){return e(this,void 0,void 0,function*(){this.emit("faviconStart","Generating favicons...");for(const t of[32,16]){let i;try{i=this.baseIcon.clone().resize(t,t,this.resizeOptions).png(this.formats.png).toBuffer()}catch(e){throw"An unknown error ocurred during the favicon creation process: "+e}const o=t+"x"+t,n=c(i);this.emit("faviconGen",n),i=yield n.content;const s=(yield n.filename)||this.fingerprint("favicon-"+o+".png",i);this.generatedFiles[s]=i,this.html.push(["link",{rel:"icon",sizes:o,href:this.meta.baseURL+s}])}this.emit("faviconEnd")})}genMsTileIcons(){return e(this,void 0,void 0,function*(){this.emit("msTileStart","Generating Microsoft Tile Icons...");for(const n of[70,150,310]){let e;try{e=this.baseIcon.clone().resize(n,n,this.resizeOptions).png(this.formats.png).toBuffer()}catch(o){throw"An unknown error ocurred during the Microsoft Tile Icon creation process: "+o}const t=n+"x"+n,i=c(e);this.emit("msTileGen",i),e=yield i.content;const s=(yield i.filename)||this.fingerprint("mstile-"+t+".png",e);this.generatedFiles[s]=e,this.intBrowserConfig+=`<square${t}logo src="${this.meta.baseURL+s}"/>`}let e;try{e=this.baseIcon.clone().resize(310,150,this.resizeOptions).png(this.formats.png).toBuffer()}catch(o){throw"An unknown error ocurred during the Microsoft Tile Icon creation process: "+o}const t=c(e);this.emit("msTileGen",t),e=yield t.content;const i=(yield t.filename)||this.fingerprint("mstile-310x150.png",e);this.generatedFiles[i]=e,this.intBrowserConfig+=`<wide310x150logo src="${this.meta.baseURL+i}"/>`,this.emit("msTileEnd")})}genManifest(){return e(this,void 0,void 0,function*(){this.manifest=Object.assign(Object.assign(Object.assign({name:this.name,short_name:this.shortName,start_url:this.startURL,scope:this.scope},this.desc&&{description:this.desc}),{icons:this.icons,theme_color:this.theme}),this.extraParams),this.html.push(["link",{rel:"manifest",href:this.meta.baseURL+"manifest.webmanifest"}])})}}exports.default=p;
},{}]},{},["QCba"], null)